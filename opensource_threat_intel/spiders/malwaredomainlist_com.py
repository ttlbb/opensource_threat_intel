# -*- coding: utf-8 -*-
import scrapy
from scrapy.spiders import CrawlSpider,Rule
from scrapy import Request
from ..items import OpensourceThreatIntelItem
#from django.conf.urls import url
from scrapy.linkextractors import LinkExtractor
import time
from scrapy.selector import Selector

class Spider(CrawlSpider):
    name = "030_malwaredomainlist.com"
    allowed_domains = ["malwaredomainlist.com"]
    start_urls = [
        'http://www.malwaredomainlist.com',
        'http://www.malwaredomainlist.com/hostslist/ip.txt',
        'http://www.malwaredomainlist.com/hostslist/hosts.txt',
	]
    rules = (
        Rule(LinkExtractor(allow='mdl.php\S*'),callback='parse_1',follow=True),
    )

    def start_requests(self):
        for url in self.start_urls:
            if url.find('hostslist/ip') >=0:
                yield Request(url,callback=self.parse_2)
            elif url.find('hostslist/hosts') >=0:
                yield Request(url,callback=self.parse_3)
            else:
               yield Request(url)
    def parse_1(self, response):
            sel = Selector(response)
            tag = 5
            data_type = 0
            trs = sel.xpath('//*[@class="table"]/tr')
            lines = response.body.split('\n')
            for i in range(4,len(trs)):
                item = OpensourceThreatIntelItem()
                tr = trs[i]
                domain = tr.xpath('string(td[2])')[0].extract().strip()
                ip = tr.xpath('string(td[3])')[0].extract().strip()
                alive_time = tr.xpath('string(td[1])')[0].extract().replace('/','-').replace('_','T') + ':00'
                now_time = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(time.time()))
                item['indicator'] = ip
                item['data_type'] = data_type
                item['tag'] = tag
                item['alive'] = True
                item['description'] = domain
                item['confidence'] = 10
                item['source'] = 'malwaredomainlist.com'
                item['updated_time'] = alive_time
                item['created_time'] = now_time
                yield item

            sel = Selector(response)
            tag = 7
            data_type = 1
            trs = sel.xpath('//*[@class="table"]/tr')
            lines = response.body.split('\n')
            for i in range(4,len(trs)):
                item = OpensourceThreatIntelItem()
                tr = trs[i]
                ip = tr.xpath('string(td[3])')[0].extract().strip()
                domain = tr.xpath('string(td[2])')[0].extract().strip()
                alive_time = tr.xpath('string(td[1])')[0].extract().replace('/','-').replace('_','T') + ':00'
                now_time = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(time.time()))
                item['indicator'] = domain
                item['data_type'] = data_type
                item['tag'] = tag
                item['alive'] = True
                item['description'] = ip
                item['confidence'] = 7
                item['source'] = 'malwaredomainlist.com'
                item['updated_time'] = alive_time
                item['created_time'] = now_time
                yield item
    
    def parse_2(self, response):
            print "3333333"
            tag = 7
            data_type = 0
            lines = response.body.split('\n')
            for line in lines:
                if line:
                    item = OpensourceThreatIntelItem()
                    ip = line.split(' ')[0].strip()
                    now_time = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(time.time()))
                    item['indicator'] = ip
                    item['data_type'] = data_type
                    item['tag'] = tag
                    item['alive'] = False
                    item['description'] = 'none'
                    item['confidence'] = 8
                    item['source'] = 'www.malwaredomainlist.com'
                    item['updated_time'] = 'none'
                    item['created_time'] = now_time
                    yield item

    def parse_3(self, response):
            print "2222222"
            tag = 7           
            lines = response.body.split('\n')
            for line in lines:
                if not str.startswith(line, '#'):
                    if not str.startswith(line,'\r'):
                        ip = line.split('  ')[0]
                        domain = line.split('  ')[-1][:-1]
                        #IP作为ID
                        item = OpensourceThreatIntelItem()  
                        data_type = 0
                        now_time = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(time.time()))
                        item['indicator'] = ip
                        item['data_type'] = data_type
                        item['tag'] = tag
                        item['alive'] = False
                        item['description'] = domain
                        item['confidence'] = 8
                        item['source'] = 'www.malwaredomainlist.com'
                        item['updated_time'] = 'none'
                        item['created_time'] = now_time
                        yield item
                        #domain作为ID
                        item = OpensourceThreatIntelItem()    
                        data_type = 1
                        now_time = time.strftime('%Y-%m-%dT%H:%M:%S', time.localtime(time.time()))
                        item['indicator'] = domain
                        item['data_type'] = data_type
                        item['tag'] = tag
                        item['alive'] = False
                        item['description'] = ip
                        item['confidence'] = 8
                        item['source'] = 'www.malwaredomainlist.com'
                        item['updated_time'] = 'none'
                        item['created_time'] = now_time
                        yield item
                    
                    
